'''На вход алгоритма подается натуральное число N. Алгоритм строит
по нему новое число R следующим образом.
1. Строится двоичная запись числа N
2. К этой записи дописывается справа бит четности: 0, если в
двоичном коде числа N было
четное число единиц, и 1, если нечетное.
3. К полученному результату дописывается 1, если число N четное, 0,
если нечетное.
Полученная таким образом запись (в ней на два разряда больше, чем
в записи исходного числа N) является двоичной записью искомого
числа R.
Например, для числа 60 алгоритм будет выполняться следующим
образом:
1. N = 60 = 1111002.
2. 11110002 (4 единицы → дописываем 0)
3. 111100012 (N - четное → дописываем 1) = 24110
Укажите минимальное число R, большее 204, которое может быть
получено в результате работы этого алгоритма. В ответе это число
запишите в десятичной системе.'''
#number 3
'''d = []
for n in range(1000, -1, -1):
    n2 = bin(n)[2:]
    n2 += str(n2.count('1') % 2)
    if n % 2 == 0:
        n2 += '1'
    else:
        n2 += '0'
    r = int(n2, 2)
    if r > 204:
        d.append(r)
print(min(d))'''

#number 5
'''Сколько существует девятеричных шестизначных чисел, содержащих
в своей записи ровно одну цифру 4, при этом рядом с этой цифрой
могут стоять только чётные цифры?'''
'''k = 0
from itertools import product
for a in product("012345678", repeat=6):
    s = ''.join(a)
    if s[0] != '0':
        if s.count("4") == 1:
            q = s.replace("0", "x")
            q = q.replace("2", "x")
            q = q.replace("6", "x")
            q = q.replace("8", "x")
            if "x4x" in q or (s[0]=="4" and "4x" in q) or (s[-1]=='4' and "x4"in q):
                k += 1
print(k)'''


#number 8
'''s = 194 * '9'
while '9999' in s or '333' in s:
    if '9999' in s:
        s = s.replace('9999', '3', 1)
    else:
        s = s.replace('333', '99', 1)
print(s)'''

#number 9
'''alphabet = sorted('0123456789QWERTYUIOPASDFGHJKLZXCVBNM')
print(alphabet)
for x in alphabet[:21]:
    
    for y in alphabet[:21]:
        if (int(f'G2BA{y}I{x}{x}', 21) + int(f'G{x}4{y}DFI', 21)) % 7 != 0:

           break
    else:
        print(x)
        print((int(f'G2BA6I{x}{x}', 21) + int(f'G{x}46DFI', 21)) //7)'''